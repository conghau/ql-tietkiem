//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TIETKIEM.report {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DS_ChiTiet_SoTK")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_ChiTiet_SoTK : global::System.Data.DataSet {
        
        private SO_TIET_KIEMDataTable tableSO_TIET_KIEM;
        
        private KHACH_HANGDataTable tableKHACH_HANG;
        
        private LOAI_TIET_KIEMDataTable tableLOAI_TIET_KIEM;
        
        private global::System.Data.DataRelation relationFK_SO_TIET_KIEM_KHACH_HANG;
        
        private global::System.Data.DataRelation relationFK_SO_TIET_KIEM_LOAI_TIET_KIEM;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_ChiTiet_SoTK() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_ChiTiet_SoTK(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SO_TIET_KIEM"] != null)) {
                    base.Tables.Add(new SO_TIET_KIEMDataTable(ds.Tables["SO_TIET_KIEM"]));
                }
                if ((ds.Tables["KHACH_HANG"] != null)) {
                    base.Tables.Add(new KHACH_HANGDataTable(ds.Tables["KHACH_HANG"]));
                }
                if ((ds.Tables["LOAI_TIET_KIEM"] != null)) {
                    base.Tables.Add(new LOAI_TIET_KIEMDataTable(ds.Tables["LOAI_TIET_KIEM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SO_TIET_KIEMDataTable SO_TIET_KIEM {
            get {
                return this.tableSO_TIET_KIEM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KHACH_HANGDataTable KHACH_HANG {
            get {
                return this.tableKHACH_HANG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LOAI_TIET_KIEMDataTable LOAI_TIET_KIEM {
            get {
                return this.tableLOAI_TIET_KIEM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DS_ChiTiet_SoTK cln = ((DS_ChiTiet_SoTK)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SO_TIET_KIEM"] != null)) {
                    base.Tables.Add(new SO_TIET_KIEMDataTable(ds.Tables["SO_TIET_KIEM"]));
                }
                if ((ds.Tables["KHACH_HANG"] != null)) {
                    base.Tables.Add(new KHACH_HANGDataTable(ds.Tables["KHACH_HANG"]));
                }
                if ((ds.Tables["LOAI_TIET_KIEM"] != null)) {
                    base.Tables.Add(new LOAI_TIET_KIEMDataTable(ds.Tables["LOAI_TIET_KIEM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSO_TIET_KIEM = ((SO_TIET_KIEMDataTable)(base.Tables["SO_TIET_KIEM"]));
            if ((initTable == true)) {
                if ((this.tableSO_TIET_KIEM != null)) {
                    this.tableSO_TIET_KIEM.InitVars();
                }
            }
            this.tableKHACH_HANG = ((KHACH_HANGDataTable)(base.Tables["KHACH_HANG"]));
            if ((initTable == true)) {
                if ((this.tableKHACH_HANG != null)) {
                    this.tableKHACH_HANG.InitVars();
                }
            }
            this.tableLOAI_TIET_KIEM = ((LOAI_TIET_KIEMDataTable)(base.Tables["LOAI_TIET_KIEM"]));
            if ((initTable == true)) {
                if ((this.tableLOAI_TIET_KIEM != null)) {
                    this.tableLOAI_TIET_KIEM.InitVars();
                }
            }
            this.relationFK_SO_TIET_KIEM_KHACH_HANG = this.Relations["FK_SO_TIET_KIEM_KHACH_HANG"];
            this.relationFK_SO_TIET_KIEM_LOAI_TIET_KIEM = this.Relations["FK_SO_TIET_KIEM_LOAI_TIET_KIEM"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_ChiTiet_SoTK";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DS_ChiTiet_SoTK.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSO_TIET_KIEM = new SO_TIET_KIEMDataTable();
            base.Tables.Add(this.tableSO_TIET_KIEM);
            this.tableKHACH_HANG = new KHACH_HANGDataTable();
            base.Tables.Add(this.tableKHACH_HANG);
            this.tableLOAI_TIET_KIEM = new LOAI_TIET_KIEMDataTable();
            base.Tables.Add(this.tableLOAI_TIET_KIEM);
            this.relationFK_SO_TIET_KIEM_KHACH_HANG = new global::System.Data.DataRelation("FK_SO_TIET_KIEM_KHACH_HANG", new global::System.Data.DataColumn[] {
                        this.tableKHACH_HANG.Ma_KHColumn}, new global::System.Data.DataColumn[] {
                        this.tableSO_TIET_KIEM.Ma_KHColumn}, false);
            this.Relations.Add(this.relationFK_SO_TIET_KIEM_KHACH_HANG);
            this.relationFK_SO_TIET_KIEM_LOAI_TIET_KIEM = new global::System.Data.DataRelation("FK_SO_TIET_KIEM_LOAI_TIET_KIEM", new global::System.Data.DataColumn[] {
                        this.tableLOAI_TIET_KIEM.Ma_Loai_TKColumn}, new global::System.Data.DataColumn[] {
                        this.tableSO_TIET_KIEM.Ma_Loai_TKColumn}, false);
            this.Relations.Add(this.relationFK_SO_TIET_KIEM_LOAI_TIET_KIEM);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSO_TIET_KIEM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeKHACH_HANG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLOAI_TIET_KIEM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DS_ChiTiet_SoTK ds = new DS_ChiTiet_SoTK();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void SO_TIET_KIEMRowChangeEventHandler(object sender, SO_TIET_KIEMRowChangeEvent e);
        
        public delegate void KHACH_HANGRowChangeEventHandler(object sender, KHACH_HANGRowChangeEvent e);
        
        public delegate void LOAI_TIET_KIEMRowChangeEventHandler(object sender, LOAI_TIET_KIEMRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SO_TIET_KIEMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMa_TK;
            
            private global::System.Data.DataColumn columnMa_KH;
            
            private global::System.Data.DataColumn columnNgay_Mo_So;
            
            private global::System.Data.DataColumn columnTong_So_Tien_Goi;
            
            private global::System.Data.DataColumn columnMa_Loai_TK;
            
            private global::System.Data.DataColumn columnSo_Du_Hien_Co;
            
            private global::System.Data.DataColumn columnTong_So_Tien_Rut;
            
            private global::System.Data.DataColumn columnNgay_Dao_Han_Ke_Tiep;
            
            private global::System.Data.DataColumn columnTien_Lai_Phat_Sinh;
            
            private global::System.Data.DataColumn columnNgay_Dong_So;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_TIET_KIEMDataTable() {
                this.TableName = "SO_TIET_KIEM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SO_TIET_KIEMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SO_TIET_KIEMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ma_TKColumn {
                get {
                    return this.columnMa_TK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ma_KHColumn {
                get {
                    return this.columnMa_KH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ngay_Mo_SoColumn {
                get {
                    return this.columnNgay_Mo_So;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tong_So_Tien_GoiColumn {
                get {
                    return this.columnTong_So_Tien_Goi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ma_Loai_TKColumn {
                get {
                    return this.columnMa_Loai_TK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn So_Du_Hien_CoColumn {
                get {
                    return this.columnSo_Du_Hien_Co;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tong_So_Tien_RutColumn {
                get {
                    return this.columnTong_So_Tien_Rut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ngay_Dao_Han_Ke_TiepColumn {
                get {
                    return this.columnNgay_Dao_Han_Ke_Tiep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tien_Lai_Phat_SinhColumn {
                get {
                    return this.columnTien_Lai_Phat_Sinh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ngay_Dong_SoColumn {
                get {
                    return this.columnNgay_Dong_So;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_TIET_KIEMRow this[int index] {
                get {
                    return ((SO_TIET_KIEMRow)(this.Rows[index]));
                }
            }
            
            public event SO_TIET_KIEMRowChangeEventHandler SO_TIET_KIEMRowChanging;
            
            public event SO_TIET_KIEMRowChangeEventHandler SO_TIET_KIEMRowChanged;
            
            public event SO_TIET_KIEMRowChangeEventHandler SO_TIET_KIEMRowDeleting;
            
            public event SO_TIET_KIEMRowChangeEventHandler SO_TIET_KIEMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSO_TIET_KIEMRow(SO_TIET_KIEMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_TIET_KIEMRow AddSO_TIET_KIEMRow(string Ma_TK, KHACH_HANGRow parentKHACH_HANGRowByFK_SO_TIET_KIEM_KHACH_HANG, System.DateTime Ngay_Mo_So, double Tong_So_Tien_Goi, LOAI_TIET_KIEMRow parentLOAI_TIET_KIEMRowByFK_SO_TIET_KIEM_LOAI_TIET_KIEM, double So_Du_Hien_Co, double Tong_So_Tien_Rut, System.DateTime Ngay_Dao_Han_Ke_Tiep, double Tien_Lai_Phat_Sinh, string Ngay_Dong_So) {
                SO_TIET_KIEMRow rowSO_TIET_KIEMRow = ((SO_TIET_KIEMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Ma_TK,
                        null,
                        Ngay_Mo_So,
                        Tong_So_Tien_Goi,
                        null,
                        So_Du_Hien_Co,
                        Tong_So_Tien_Rut,
                        Ngay_Dao_Han_Ke_Tiep,
                        Tien_Lai_Phat_Sinh,
                        Ngay_Dong_So};
                if ((parentKHACH_HANGRowByFK_SO_TIET_KIEM_KHACH_HANG != null)) {
                    columnValuesArray[1] = parentKHACH_HANGRowByFK_SO_TIET_KIEM_KHACH_HANG[0];
                }
                if ((parentLOAI_TIET_KIEMRowByFK_SO_TIET_KIEM_LOAI_TIET_KIEM != null)) {
                    columnValuesArray[4] = parentLOAI_TIET_KIEMRowByFK_SO_TIET_KIEM_LOAI_TIET_KIEM[0];
                }
                rowSO_TIET_KIEMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSO_TIET_KIEMRow);
                return rowSO_TIET_KIEMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_TIET_KIEMRow FindByMa_TK(string Ma_TK) {
                return ((SO_TIET_KIEMRow)(this.Rows.Find(new object[] {
                            Ma_TK})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SO_TIET_KIEMDataTable cln = ((SO_TIET_KIEMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SO_TIET_KIEMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMa_TK = base.Columns["Ma_TK"];
                this.columnMa_KH = base.Columns["Ma_KH"];
                this.columnNgay_Mo_So = base.Columns["Ngay_Mo_So"];
                this.columnTong_So_Tien_Goi = base.Columns["Tong_So_Tien_Goi"];
                this.columnMa_Loai_TK = base.Columns["Ma_Loai_TK"];
                this.columnSo_Du_Hien_Co = base.Columns["So_Du_Hien_Co"];
                this.columnTong_So_Tien_Rut = base.Columns["Tong_So_Tien_Rut"];
                this.columnNgay_Dao_Han_Ke_Tiep = base.Columns["Ngay_Dao_Han_Ke_Tiep"];
                this.columnTien_Lai_Phat_Sinh = base.Columns["Tien_Lai_Phat_Sinh"];
                this.columnNgay_Dong_So = base.Columns["Ngay_Dong_So"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMa_TK = new global::System.Data.DataColumn("Ma_TK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMa_TK);
                this.columnMa_KH = new global::System.Data.DataColumn("Ma_KH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMa_KH);
                this.columnNgay_Mo_So = new global::System.Data.DataColumn("Ngay_Mo_So", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgay_Mo_So);
                this.columnTong_So_Tien_Goi = new global::System.Data.DataColumn("Tong_So_Tien_Goi", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTong_So_Tien_Goi);
                this.columnMa_Loai_TK = new global::System.Data.DataColumn("Ma_Loai_TK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMa_Loai_TK);
                this.columnSo_Du_Hien_Co = new global::System.Data.DataColumn("So_Du_Hien_Co", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSo_Du_Hien_Co);
                this.columnTong_So_Tien_Rut = new global::System.Data.DataColumn("Tong_So_Tien_Rut", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTong_So_Tien_Rut);
                this.columnNgay_Dao_Han_Ke_Tiep = new global::System.Data.DataColumn("Ngay_Dao_Han_Ke_Tiep", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgay_Dao_Han_Ke_Tiep);
                this.columnTien_Lai_Phat_Sinh = new global::System.Data.DataColumn("Tien_Lai_Phat_Sinh", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTien_Lai_Phat_Sinh);
                this.columnNgay_Dong_So = new global::System.Data.DataColumn("Ngay_Dong_So", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgay_Dong_So);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMa_TK}, true));
                this.columnMa_TK.AllowDBNull = false;
                this.columnMa_TK.Unique = true;
                this.columnMa_TK.MaxLength = 10;
                this.columnMa_KH.AllowDBNull = false;
                this.columnMa_KH.MaxLength = 10;
                this.columnNgay_Mo_So.AllowDBNull = false;
                this.columnTong_So_Tien_Goi.AllowDBNull = false;
                this.columnMa_Loai_TK.AllowDBNull = false;
                this.columnMa_Loai_TK.MaxLength = 10;
                this.columnSo_Du_Hien_Co.AllowDBNull = false;
                this.columnNgay_Dong_So.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_TIET_KIEMRow NewSO_TIET_KIEMRow() {
                return ((SO_TIET_KIEMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SO_TIET_KIEMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SO_TIET_KIEMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SO_TIET_KIEMRowChanged != null)) {
                    this.SO_TIET_KIEMRowChanged(this, new SO_TIET_KIEMRowChangeEvent(((SO_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SO_TIET_KIEMRowChanging != null)) {
                    this.SO_TIET_KIEMRowChanging(this, new SO_TIET_KIEMRowChangeEvent(((SO_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SO_TIET_KIEMRowDeleted != null)) {
                    this.SO_TIET_KIEMRowDeleted(this, new SO_TIET_KIEMRowChangeEvent(((SO_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SO_TIET_KIEMRowDeleting != null)) {
                    this.SO_TIET_KIEMRowDeleting(this, new SO_TIET_KIEMRowChangeEvent(((SO_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSO_TIET_KIEMRow(SO_TIET_KIEMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_ChiTiet_SoTK ds = new DS_ChiTiet_SoTK();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SO_TIET_KIEMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KHACH_HANGDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMa_KH;
            
            private global::System.Data.DataColumn columnTen_Khach_Hang;
            
            private global::System.Data.DataColumn columnSo_CMND;
            
            private global::System.Data.DataColumn columnSo_Dien_Thoai;
            
            private global::System.Data.DataColumn columnDia_Chi;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGDataTable() {
                this.TableName = "KHACH_HANG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KHACH_HANGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected KHACH_HANGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ma_KHColumn {
                get {
                    return this.columnMa_KH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ten_Khach_HangColumn {
                get {
                    return this.columnTen_Khach_Hang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn So_CMNDColumn {
                get {
                    return this.columnSo_CMND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn So_Dien_ThoaiColumn {
                get {
                    return this.columnSo_Dien_Thoai;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dia_ChiColumn {
                get {
                    return this.columnDia_Chi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow this[int index] {
                get {
                    return ((KHACH_HANGRow)(this.Rows[index]));
                }
            }
            
            public event KHACH_HANGRowChangeEventHandler KHACH_HANGRowChanging;
            
            public event KHACH_HANGRowChangeEventHandler KHACH_HANGRowChanged;
            
            public event KHACH_HANGRowChangeEventHandler KHACH_HANGRowDeleting;
            
            public event KHACH_HANGRowChangeEventHandler KHACH_HANGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddKHACH_HANGRow(KHACH_HANGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow AddKHACH_HANGRow(string Ma_KH, string Ten_Khach_Hang, string So_CMND, string So_Dien_Thoai, string Dia_Chi) {
                KHACH_HANGRow rowKHACH_HANGRow = ((KHACH_HANGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Ma_KH,
                        Ten_Khach_Hang,
                        So_CMND,
                        So_Dien_Thoai,
                        Dia_Chi};
                rowKHACH_HANGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowKHACH_HANGRow);
                return rowKHACH_HANGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow FindByMa_KH(string Ma_KH) {
                return ((KHACH_HANGRow)(this.Rows.Find(new object[] {
                            Ma_KH})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                KHACH_HANGDataTable cln = ((KHACH_HANGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new KHACH_HANGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMa_KH = base.Columns["Ma_KH"];
                this.columnTen_Khach_Hang = base.Columns["Ten_Khach_Hang"];
                this.columnSo_CMND = base.Columns["So_CMND"];
                this.columnSo_Dien_Thoai = base.Columns["So_Dien_Thoai"];
                this.columnDia_Chi = base.Columns["Dia_Chi"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMa_KH = new global::System.Data.DataColumn("Ma_KH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMa_KH);
                this.columnTen_Khach_Hang = new global::System.Data.DataColumn("Ten_Khach_Hang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTen_Khach_Hang);
                this.columnSo_CMND = new global::System.Data.DataColumn("So_CMND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSo_CMND);
                this.columnSo_Dien_Thoai = new global::System.Data.DataColumn("So_Dien_Thoai", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSo_Dien_Thoai);
                this.columnDia_Chi = new global::System.Data.DataColumn("Dia_Chi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDia_Chi);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMa_KH}, true));
                this.columnMa_KH.AllowDBNull = false;
                this.columnMa_KH.Unique = true;
                this.columnMa_KH.MaxLength = 10;
                this.columnTen_Khach_Hang.AllowDBNull = false;
                this.columnTen_Khach_Hang.MaxLength = 30;
                this.columnSo_CMND.AllowDBNull = false;
                this.columnSo_CMND.MaxLength = 9;
                this.columnSo_Dien_Thoai.AllowDBNull = false;
                this.columnSo_Dien_Thoai.MaxLength = 11;
                this.columnDia_Chi.AllowDBNull = false;
                this.columnDia_Chi.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow NewKHACH_HANGRow() {
                return ((KHACH_HANGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new KHACH_HANGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(KHACH_HANGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KHACH_HANGRowChanged != null)) {
                    this.KHACH_HANGRowChanged(this, new KHACH_HANGRowChangeEvent(((KHACH_HANGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KHACH_HANGRowChanging != null)) {
                    this.KHACH_HANGRowChanging(this, new KHACH_HANGRowChangeEvent(((KHACH_HANGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KHACH_HANGRowDeleted != null)) {
                    this.KHACH_HANGRowDeleted(this, new KHACH_HANGRowChangeEvent(((KHACH_HANGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KHACH_HANGRowDeleting != null)) {
                    this.KHACH_HANGRowDeleting(this, new KHACH_HANGRowChangeEvent(((KHACH_HANGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveKHACH_HANGRow(KHACH_HANGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_ChiTiet_SoTK ds = new DS_ChiTiet_SoTK();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KHACH_HANGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LOAI_TIET_KIEMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMa_Loai_TK;
            
            private global::System.Data.DataColumn columnTen_Loai_TK;
            
            private global::System.Data.DataColumn columnKy_Han;
            
            private global::System.Data.DataColumn columnLai_Suat;
            
            private global::System.Data.DataColumn columnSo_Ngay_Goi_Toi_Thieu;
            
            private global::System.Data.DataColumn columnQD_So_Tien_Duoc_Rut;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TIET_KIEMDataTable() {
                this.TableName = "LOAI_TIET_KIEM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LOAI_TIET_KIEMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LOAI_TIET_KIEMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ma_Loai_TKColumn {
                get {
                    return this.columnMa_Loai_TK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ten_Loai_TKColumn {
                get {
                    return this.columnTen_Loai_TK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ky_HanColumn {
                get {
                    return this.columnKy_Han;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Lai_SuatColumn {
                get {
                    return this.columnLai_Suat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn So_Ngay_Goi_Toi_ThieuColumn {
                get {
                    return this.columnSo_Ngay_Goi_Toi_Thieu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QD_So_Tien_Duoc_RutColumn {
                get {
                    return this.columnQD_So_Tien_Duoc_Rut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TIET_KIEMRow this[int index] {
                get {
                    return ((LOAI_TIET_KIEMRow)(this.Rows[index]));
                }
            }
            
            public event LOAI_TIET_KIEMRowChangeEventHandler LOAI_TIET_KIEMRowChanging;
            
            public event LOAI_TIET_KIEMRowChangeEventHandler LOAI_TIET_KIEMRowChanged;
            
            public event LOAI_TIET_KIEMRowChangeEventHandler LOAI_TIET_KIEMRowDeleting;
            
            public event LOAI_TIET_KIEMRowChangeEventHandler LOAI_TIET_KIEMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLOAI_TIET_KIEMRow(LOAI_TIET_KIEMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TIET_KIEMRow AddLOAI_TIET_KIEMRow(string Ma_Loai_TK, string Ten_Loai_TK, int Ky_Han, double Lai_Suat, int So_Ngay_Goi_Toi_Thieu, string QD_So_Tien_Duoc_Rut) {
                LOAI_TIET_KIEMRow rowLOAI_TIET_KIEMRow = ((LOAI_TIET_KIEMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Ma_Loai_TK,
                        Ten_Loai_TK,
                        Ky_Han,
                        Lai_Suat,
                        So_Ngay_Goi_Toi_Thieu,
                        QD_So_Tien_Duoc_Rut};
                rowLOAI_TIET_KIEMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLOAI_TIET_KIEMRow);
                return rowLOAI_TIET_KIEMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TIET_KIEMRow FindByMa_Loai_TK(string Ma_Loai_TK) {
                return ((LOAI_TIET_KIEMRow)(this.Rows.Find(new object[] {
                            Ma_Loai_TK})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LOAI_TIET_KIEMDataTable cln = ((LOAI_TIET_KIEMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LOAI_TIET_KIEMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMa_Loai_TK = base.Columns["Ma_Loai_TK"];
                this.columnTen_Loai_TK = base.Columns["Ten_Loai_TK"];
                this.columnKy_Han = base.Columns["Ky_Han"];
                this.columnLai_Suat = base.Columns["Lai_Suat"];
                this.columnSo_Ngay_Goi_Toi_Thieu = base.Columns["So_Ngay_Goi_Toi_Thieu"];
                this.columnQD_So_Tien_Duoc_Rut = base.Columns["QD_So_Tien_Duoc_Rut"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMa_Loai_TK = new global::System.Data.DataColumn("Ma_Loai_TK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMa_Loai_TK);
                this.columnTen_Loai_TK = new global::System.Data.DataColumn("Ten_Loai_TK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTen_Loai_TK);
                this.columnKy_Han = new global::System.Data.DataColumn("Ky_Han", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKy_Han);
                this.columnLai_Suat = new global::System.Data.DataColumn("Lai_Suat", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLai_Suat);
                this.columnSo_Ngay_Goi_Toi_Thieu = new global::System.Data.DataColumn("So_Ngay_Goi_Toi_Thieu", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSo_Ngay_Goi_Toi_Thieu);
                this.columnQD_So_Tien_Duoc_Rut = new global::System.Data.DataColumn("QD_So_Tien_Duoc_Rut", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQD_So_Tien_Duoc_Rut);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMa_Loai_TK}, true));
                this.columnMa_Loai_TK.AllowDBNull = false;
                this.columnMa_Loai_TK.Unique = true;
                this.columnMa_Loai_TK.MaxLength = 10;
                this.columnTen_Loai_TK.AllowDBNull = false;
                this.columnTen_Loai_TK.MaxLength = 15;
                this.columnKy_Han.AllowDBNull = false;
                this.columnLai_Suat.AllowDBNull = false;
                this.columnSo_Ngay_Goi_Toi_Thieu.AllowDBNull = false;
                this.columnQD_So_Tien_Duoc_Rut.AllowDBNull = false;
                this.columnQD_So_Tien_Duoc_Rut.MaxLength = 2;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TIET_KIEMRow NewLOAI_TIET_KIEMRow() {
                return ((LOAI_TIET_KIEMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LOAI_TIET_KIEMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LOAI_TIET_KIEMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LOAI_TIET_KIEMRowChanged != null)) {
                    this.LOAI_TIET_KIEMRowChanged(this, new LOAI_TIET_KIEMRowChangeEvent(((LOAI_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LOAI_TIET_KIEMRowChanging != null)) {
                    this.LOAI_TIET_KIEMRowChanging(this, new LOAI_TIET_KIEMRowChangeEvent(((LOAI_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LOAI_TIET_KIEMRowDeleted != null)) {
                    this.LOAI_TIET_KIEMRowDeleted(this, new LOAI_TIET_KIEMRowChangeEvent(((LOAI_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LOAI_TIET_KIEMRowDeleting != null)) {
                    this.LOAI_TIET_KIEMRowDeleting(this, new LOAI_TIET_KIEMRowChangeEvent(((LOAI_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLOAI_TIET_KIEMRow(LOAI_TIET_KIEMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_ChiTiet_SoTK ds = new DS_ChiTiet_SoTK();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LOAI_TIET_KIEMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SO_TIET_KIEMRow : global::System.Data.DataRow {
            
            private SO_TIET_KIEMDataTable tableSO_TIET_KIEM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SO_TIET_KIEMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSO_TIET_KIEM = ((SO_TIET_KIEMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ma_TK {
                get {
                    return ((string)(this[this.tableSO_TIET_KIEM.Ma_TKColumn]));
                }
                set {
                    this[this.tableSO_TIET_KIEM.Ma_TKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ma_KH {
                get {
                    return ((string)(this[this.tableSO_TIET_KIEM.Ma_KHColumn]));
                }
                set {
                    this[this.tableSO_TIET_KIEM.Ma_KHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Ngay_Mo_So {
                get {
                    return ((global::System.DateTime)(this[this.tableSO_TIET_KIEM.Ngay_Mo_SoColumn]));
                }
                set {
                    this[this.tableSO_TIET_KIEM.Ngay_Mo_SoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Tong_So_Tien_Goi {
                get {
                    return ((double)(this[this.tableSO_TIET_KIEM.Tong_So_Tien_GoiColumn]));
                }
                set {
                    this[this.tableSO_TIET_KIEM.Tong_So_Tien_GoiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ma_Loai_TK {
                get {
                    return ((string)(this[this.tableSO_TIET_KIEM.Ma_Loai_TKColumn]));
                }
                set {
                    this[this.tableSO_TIET_KIEM.Ma_Loai_TKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double So_Du_Hien_Co {
                get {
                    return ((double)(this[this.tableSO_TIET_KIEM.So_Du_Hien_CoColumn]));
                }
                set {
                    this[this.tableSO_TIET_KIEM.So_Du_Hien_CoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Tong_So_Tien_Rut {
                get {
                    try {
                        return ((double)(this[this.tableSO_TIET_KIEM.Tong_So_Tien_RutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tong_So_Tien_Rut\' in table \'SO_TIET_KIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSO_TIET_KIEM.Tong_So_Tien_RutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Ngay_Dao_Han_Ke_Tiep {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSO_TIET_KIEM.Ngay_Dao_Han_Ke_TiepColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ngay_Dao_Han_Ke_Tiep\' in table \'SO_TIET_KIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSO_TIET_KIEM.Ngay_Dao_Han_Ke_TiepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Tien_Lai_Phat_Sinh {
                get {
                    try {
                        return ((double)(this[this.tableSO_TIET_KIEM.Tien_Lai_Phat_SinhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tien_Lai_Phat_Sinh\' in table \'SO_TIET_KIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSO_TIET_KIEM.Tien_Lai_Phat_SinhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ngay_Dong_So {
                get {
                    try {
                        return ((string)(this[this.tableSO_TIET_KIEM.Ngay_Dong_SoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ngay_Dong_So\' in table \'SO_TIET_KIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSO_TIET_KIEM.Ngay_Dong_SoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow KHACH_HANGRow {
                get {
                    return ((KHACH_HANGRow)(this.GetParentRow(this.Table.ParentRelations["FK_SO_TIET_KIEM_KHACH_HANG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_SO_TIET_KIEM_KHACH_HANG"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TIET_KIEMRow LOAI_TIET_KIEMRow {
                get {
                    return ((LOAI_TIET_KIEMRow)(this.GetParentRow(this.Table.ParentRelations["FK_SO_TIET_KIEM_LOAI_TIET_KIEM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_SO_TIET_KIEM_LOAI_TIET_KIEM"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTong_So_Tien_RutNull() {
                return this.IsNull(this.tableSO_TIET_KIEM.Tong_So_Tien_RutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTong_So_Tien_RutNull() {
                this[this.tableSO_TIET_KIEM.Tong_So_Tien_RutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNgay_Dao_Han_Ke_TiepNull() {
                return this.IsNull(this.tableSO_TIET_KIEM.Ngay_Dao_Han_Ke_TiepColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNgay_Dao_Han_Ke_TiepNull() {
                this[this.tableSO_TIET_KIEM.Ngay_Dao_Han_Ke_TiepColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTien_Lai_Phat_SinhNull() {
                return this.IsNull(this.tableSO_TIET_KIEM.Tien_Lai_Phat_SinhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTien_Lai_Phat_SinhNull() {
                this[this.tableSO_TIET_KIEM.Tien_Lai_Phat_SinhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNgay_Dong_SoNull() {
                return this.IsNull(this.tableSO_TIET_KIEM.Ngay_Dong_SoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNgay_Dong_SoNull() {
                this[this.tableSO_TIET_KIEM.Ngay_Dong_SoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class KHACH_HANGRow : global::System.Data.DataRow {
            
            private KHACH_HANGDataTable tableKHACH_HANG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KHACH_HANGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKHACH_HANG = ((KHACH_HANGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ma_KH {
                get {
                    return ((string)(this[this.tableKHACH_HANG.Ma_KHColumn]));
                }
                set {
                    this[this.tableKHACH_HANG.Ma_KHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ten_Khach_Hang {
                get {
                    return ((string)(this[this.tableKHACH_HANG.Ten_Khach_HangColumn]));
                }
                set {
                    this[this.tableKHACH_HANG.Ten_Khach_HangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string So_CMND {
                get {
                    return ((string)(this[this.tableKHACH_HANG.So_CMNDColumn]));
                }
                set {
                    this[this.tableKHACH_HANG.So_CMNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string So_Dien_Thoai {
                get {
                    return ((string)(this[this.tableKHACH_HANG.So_Dien_ThoaiColumn]));
                }
                set {
                    this[this.tableKHACH_HANG.So_Dien_ThoaiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dia_Chi {
                get {
                    return ((string)(this[this.tableKHACH_HANG.Dia_ChiColumn]));
                }
                set {
                    this[this.tableKHACH_HANG.Dia_ChiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_TIET_KIEMRow[] GetSO_TIET_KIEMRows() {
                if ((this.Table.ChildRelations["FK_SO_TIET_KIEM_KHACH_HANG"] == null)) {
                    return new SO_TIET_KIEMRow[0];
                }
                else {
                    return ((SO_TIET_KIEMRow[])(base.GetChildRows(this.Table.ChildRelations["FK_SO_TIET_KIEM_KHACH_HANG"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LOAI_TIET_KIEMRow : global::System.Data.DataRow {
            
            private LOAI_TIET_KIEMDataTable tableLOAI_TIET_KIEM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LOAI_TIET_KIEMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLOAI_TIET_KIEM = ((LOAI_TIET_KIEMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ma_Loai_TK {
                get {
                    return ((string)(this[this.tableLOAI_TIET_KIEM.Ma_Loai_TKColumn]));
                }
                set {
                    this[this.tableLOAI_TIET_KIEM.Ma_Loai_TKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ten_Loai_TK {
                get {
                    return ((string)(this[this.tableLOAI_TIET_KIEM.Ten_Loai_TKColumn]));
                }
                set {
                    this[this.tableLOAI_TIET_KIEM.Ten_Loai_TKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Ky_Han {
                get {
                    return ((int)(this[this.tableLOAI_TIET_KIEM.Ky_HanColumn]));
                }
                set {
                    this[this.tableLOAI_TIET_KIEM.Ky_HanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Lai_Suat {
                get {
                    return ((double)(this[this.tableLOAI_TIET_KIEM.Lai_SuatColumn]));
                }
                set {
                    this[this.tableLOAI_TIET_KIEM.Lai_SuatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int So_Ngay_Goi_Toi_Thieu {
                get {
                    return ((int)(this[this.tableLOAI_TIET_KIEM.So_Ngay_Goi_Toi_ThieuColumn]));
                }
                set {
                    this[this.tableLOAI_TIET_KIEM.So_Ngay_Goi_Toi_ThieuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QD_So_Tien_Duoc_Rut {
                get {
                    return ((string)(this[this.tableLOAI_TIET_KIEM.QD_So_Tien_Duoc_RutColumn]));
                }
                set {
                    this[this.tableLOAI_TIET_KIEM.QD_So_Tien_Duoc_RutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_TIET_KIEMRow[] GetSO_TIET_KIEMRows() {
                if ((this.Table.ChildRelations["FK_SO_TIET_KIEM_LOAI_TIET_KIEM"] == null)) {
                    return new SO_TIET_KIEMRow[0];
                }
                else {
                    return ((SO_TIET_KIEMRow[])(base.GetChildRows(this.Table.ChildRelations["FK_SO_TIET_KIEM_LOAI_TIET_KIEM"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SO_TIET_KIEMRowChangeEvent : global::System.EventArgs {
            
            private SO_TIET_KIEMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_TIET_KIEMRowChangeEvent(SO_TIET_KIEMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_TIET_KIEMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class KHACH_HANGRowChangeEvent : global::System.EventArgs {
            
            private KHACH_HANGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRowChangeEvent(KHACH_HANGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LOAI_TIET_KIEMRowChangeEvent : global::System.EventArgs {
            
            private LOAI_TIET_KIEMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TIET_KIEMRowChangeEvent(LOAI_TIET_KIEMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TIET_KIEMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace TIETKIEM.report.DS_ChiTiet_SoTKTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SO_TIET_KIEMTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SO_TIET_KIEMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SO_TIET_KIEM";
            tableMapping.ColumnMappings.Add("Ma_TK", "Ma_TK");
            tableMapping.ColumnMappings.Add("Ma_KH", "Ma_KH");
            tableMapping.ColumnMappings.Add("Ngay_Mo_So", "Ngay_Mo_So");
            tableMapping.ColumnMappings.Add("Tong_So_Tien_Goi", "Tong_So_Tien_Goi");
            tableMapping.ColumnMappings.Add("Ma_Loai_TK", "Ma_Loai_TK");
            tableMapping.ColumnMappings.Add("So_Du_Hien_Co", "So_Du_Hien_Co");
            tableMapping.ColumnMappings.Add("Tong_So_Tien_Rut", "Tong_So_Tien_Rut");
            tableMapping.ColumnMappings.Add("Ngay_Dao_Han_Ke_Tiep", "Ngay_Dao_Han_Ke_Tiep");
            tableMapping.ColumnMappings.Add("Tien_Lai_Phat_Sinh", "Tien_Lai_Phat_Sinh");
            tableMapping.ColumnMappings.Add("Ngay_Dong_So", "Ngay_Dong_So");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[SO_TIET_KIEM] WHERE (([Ma_TK] = @Original_Ma_TK) AND ([Ma_KH] = @Original_Ma_KH) AND ([Ngay_Mo_So] = @Original_Ngay_Mo_So) AND ([Tong_So_Tien_Goi] = @Original_Tong_So_Tien_Goi) AND ([Ma_Loai_TK] = @Original_Ma_Loai_TK) AND ([So_Du_Hien_Co] = @Original_So_Du_Hien_Co) AND ((@IsNull_Tong_So_Tien_Rut = 1 AND [Tong_So_Tien_Rut] IS NULL) OR ([Tong_So_Tien_Rut] = @Original_Tong_So_Tien_Rut)) AND ((@IsNull_Ngay_Dao_Han_Ke_Tiep = 1 AND [Ngay_Dao_Han_Ke_Tiep] IS NULL) OR ([Ngay_Dao_Han_Ke_Tiep] = @Original_Ngay_Dao_Han_Ke_Tiep)) AND ((@IsNull_Tien_Lai_Phat_Sinh = 1 AND [Tien_Lai_Phat_Sinh] IS NULL) OR ([Tien_Lai_Phat_Sinh] = @Original_Tien_Lai_Phat_Sinh)) AND ((@IsNull_Ngay_Dong_So = 1 AND [Ngay_Dong_So] IS NULL) OR ([Ngay_Dong_So] = @Original_Ngay_Dong_So)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ma_TK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ma_TK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ma_KH", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ma_KH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ngay_Mo_So", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ngay_Mo_So", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tong_So_Tien_Goi", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tong_So_Tien_Goi", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ma_Loai_TK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ma_Loai_TK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_So_Du_Hien_Co", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "So_Du_Hien_Co", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tong_So_Tien_Rut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tong_So_Tien_Rut", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tong_So_Tien_Rut", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tong_So_Tien_Rut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ngay_Dao_Han_Ke_Tiep", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ngay_Dao_Han_Ke_Tiep", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ngay_Dao_Han_Ke_Tiep", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ngay_Dao_Han_Ke_Tiep", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tien_Lai_Phat_Sinh", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tien_Lai_Phat_Sinh", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tien_Lai_Phat_Sinh", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tien_Lai_Phat_Sinh", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ngay_Dong_So", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ngay_Dong_So", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ngay_Dong_So", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ngay_Dong_So", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SO_TIET_KIEM] ([Ma_TK], [Ma_KH], [Ngay_Mo_So], [Tong_So_Tien_Goi], [Ma_Loai_TK], [So_Du_Hien_Co], [Tong_So_Tien_Rut], [Ngay_Dao_Han_Ke_Tiep], [Tien_Lai_Phat_Sinh], [Ngay_Dong_So]) VALUES (@Ma_TK, @Ma_KH, @Ngay_Mo_So, @Tong_So_Tien_Goi, @Ma_Loai_TK, @So_Du_Hien_Co, @Tong_So_Tien_Rut, @Ngay_Dao_Han_Ke_Tiep, @Tien_Lai_Phat_Sinh, @Ngay_Dong_So);
SELECT Ma_TK, Ma_KH, Ngay_Mo_So, Tong_So_Tien_Goi, Ma_Loai_TK, So_Du_Hien_Co, Tong_So_Tien_Rut, Ngay_Dao_Han_Ke_Tiep, Tien_Lai_Phat_Sinh, Ngay_Dong_So FROM SO_TIET_KIEM WHERE (Ma_TK = @Ma_TK)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ma_TK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ma_TK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ma_KH", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ma_KH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ngay_Mo_So", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ngay_Mo_So", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tong_So_Tien_Goi", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tong_So_Tien_Goi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ma_Loai_TK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ma_Loai_TK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@So_Du_Hien_Co", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "So_Du_Hien_Co", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tong_So_Tien_Rut", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tong_So_Tien_Rut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ngay_Dao_Han_Ke_Tiep", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ngay_Dao_Han_Ke_Tiep", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tien_Lai_Phat_Sinh", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tien_Lai_Phat_Sinh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ngay_Dong_So", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ngay_Dong_So", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[SO_TIET_KIEM] SET [Ma_TK] = @Ma_TK, [Ma_KH] = @Ma_KH, [Ngay_Mo_So] = @Ngay_Mo_So, [Tong_So_Tien_Goi] = @Tong_So_Tien_Goi, [Ma_Loai_TK] = @Ma_Loai_TK, [So_Du_Hien_Co] = @So_Du_Hien_Co, [Tong_So_Tien_Rut] = @Tong_So_Tien_Rut, [Ngay_Dao_Han_Ke_Tiep] = @Ngay_Dao_Han_Ke_Tiep, [Tien_Lai_Phat_Sinh] = @Tien_Lai_Phat_Sinh, [Ngay_Dong_So] = @Ngay_Dong_So WHERE (([Ma_TK] = @Original_Ma_TK) AND ([Ma_KH] = @Original_Ma_KH) AND ([Ngay_Mo_So] = @Original_Ngay_Mo_So) AND ([Tong_So_Tien_Goi] = @Original_Tong_So_Tien_Goi) AND ([Ma_Loai_TK] = @Original_Ma_Loai_TK) AND ([So_Du_Hien_Co] = @Original_So_Du_Hien_Co) AND ((@IsNull_Tong_So_Tien_Rut = 1 AND [Tong_So_Tien_Rut] IS NULL) OR ([Tong_So_Tien_Rut] = @Original_Tong_So_Tien_Rut)) AND ((@IsNull_Ngay_Dao_Han_Ke_Tiep = 1 AND [Ngay_Dao_Han_Ke_Tiep] IS NULL) OR ([Ngay_Dao_Han_Ke_Tiep] = @Original_Ngay_Dao_Han_Ke_Tiep)) AND ((@IsNull_Tien_Lai_Phat_Sinh = 1 AND [Tien_Lai_Phat_Sinh] IS NULL) OR ([Tien_Lai_Phat_Sinh] = @Original_Tien_Lai_Phat_Sinh)) AND ((@IsNull_Ngay_Dong_So = 1 AND [Ngay_Dong_So] IS NULL) OR ([Ngay_Dong_So] = @Original_Ngay_Dong_So)));
SELECT Ma_TK, Ma_KH, Ngay_Mo_So, Tong_So_Tien_Goi, Ma_Loai_TK, So_Du_Hien_Co, Tong_So_Tien_Rut, Ngay_Dao_Han_Ke_Tiep, Tien_Lai_Phat_Sinh, Ngay_Dong_So FROM SO_TIET_KIEM WHERE (Ma_TK = @Ma_TK)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ma_TK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ma_TK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ma_KH", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ma_KH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ngay_Mo_So", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ngay_Mo_So", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tong_So_Tien_Goi", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tong_So_Tien_Goi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ma_Loai_TK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ma_Loai_TK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@So_Du_Hien_Co", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "So_Du_Hien_Co", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tong_So_Tien_Rut", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tong_So_Tien_Rut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ngay_Dao_Han_Ke_Tiep", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ngay_Dao_Han_Ke_Tiep", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tien_Lai_Phat_Sinh", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tien_Lai_Phat_Sinh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ngay_Dong_So", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ngay_Dong_So", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ma_TK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ma_TK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ma_KH", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ma_KH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ngay_Mo_So", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ngay_Mo_So", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tong_So_Tien_Goi", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tong_So_Tien_Goi", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ma_Loai_TK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ma_Loai_TK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_So_Du_Hien_Co", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "So_Du_Hien_Co", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tong_So_Tien_Rut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tong_So_Tien_Rut", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tong_So_Tien_Rut", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tong_So_Tien_Rut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ngay_Dao_Han_Ke_Tiep", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ngay_Dao_Han_Ke_Tiep", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ngay_Dao_Han_Ke_Tiep", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ngay_Dao_Han_Ke_Tiep", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tien_Lai_Phat_Sinh", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tien_Lai_Phat_Sinh", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tien_Lai_Phat_Sinh", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tien_Lai_Phat_Sinh", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ngay_Dong_So", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ngay_Dong_So", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ngay_Dong_So", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ngay_Dong_So", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TIETKIEM.Properties.Settings.Default.QL_TIETKIEMConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Ma_TK, Ma_KH, Ngay_Mo_So, Tong_So_Tien_Goi, Ma_Loai_TK, So_Du_Hien_Co, Ton" +
                "g_So_Tien_Rut, Ngay_Dao_Han_Ke_Tiep, Tien_Lai_Phat_Sinh, Ngay_Dong_So FROM dbo.S" +
                "O_TIET_KIEM";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DS_ChiTiet_SoTK.SO_TIET_KIEMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DS_ChiTiet_SoTK.SO_TIET_KIEMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DS_ChiTiet_SoTK.SO_TIET_KIEMDataTable dataTable = new DS_ChiTiet_SoTK.SO_TIET_KIEMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DS_ChiTiet_SoTK.SO_TIET_KIEMDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DS_ChiTiet_SoTK dataSet) {
            return this.Adapter.Update(dataSet, "SO_TIET_KIEM");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Ma_TK, string Original_Ma_KH, System.DateTime Original_Ngay_Mo_So, double Original_Tong_So_Tien_Goi, string Original_Ma_Loai_TK, double Original_So_Du_Hien_Co, global::System.Nullable<double> Original_Tong_So_Tien_Rut, global::System.Nullable<global::System.DateTime> Original_Ngay_Dao_Han_Ke_Tiep, global::System.Nullable<double> Original_Tien_Lai_Phat_Sinh, string Original_Ngay_Dong_So) {
            if ((Original_Ma_TK == null)) {
                throw new global::System.ArgumentNullException("Original_Ma_TK");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Ma_TK));
            }
            if ((Original_Ma_KH == null)) {
                throw new global::System.ArgumentNullException("Original_Ma_KH");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Ma_KH));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_Ngay_Mo_So));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_Tong_So_Tien_Goi));
            if ((Original_Ma_Loai_TK == null)) {
                throw new global::System.ArgumentNullException("Original_Ma_Loai_TK");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Ma_Loai_TK));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_So_Du_Hien_Co));
            if ((Original_Tong_So_Tien_Rut.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_Tong_So_Tien_Rut.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_Ngay_Dao_Han_Ke_Tiep.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_Ngay_Dao_Han_Ke_Tiep.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_Tien_Lai_Phat_Sinh.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((double)(Original_Tien_Lai_Phat_Sinh.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_Ngay_Dong_So == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Ngay_Dong_So));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Ma_TK, string Ma_KH, System.DateTime Ngay_Mo_So, double Tong_So_Tien_Goi, string Ma_Loai_TK, double So_Du_Hien_Co, global::System.Nullable<double> Tong_So_Tien_Rut, global::System.Nullable<global::System.DateTime> Ngay_Dao_Han_Ke_Tiep, global::System.Nullable<double> Tien_Lai_Phat_Sinh, string Ngay_Dong_So) {
            if ((Ma_TK == null)) {
                throw new global::System.ArgumentNullException("Ma_TK");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Ma_TK));
            }
            if ((Ma_KH == null)) {
                throw new global::System.ArgumentNullException("Ma_KH");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Ma_KH));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Ngay_Mo_So));
            this.Adapter.InsertCommand.Parameters[3].Value = ((double)(Tong_So_Tien_Goi));
            if ((Ma_Loai_TK == null)) {
                throw new global::System.ArgumentNullException("Ma_Loai_TK");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Ma_Loai_TK));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((double)(So_Du_Hien_Co));
            if ((Tong_So_Tien_Rut.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(Tong_So_Tien_Rut.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Ngay_Dao_Han_Ke_Tiep.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(Ngay_Dao_Han_Ke_Tiep.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Tien_Lai_Phat_Sinh.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(Tien_Lai_Phat_Sinh.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Ngay_Dong_So == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Ngay_Dong_So));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Ma_TK, 
                    string Ma_KH, 
                    System.DateTime Ngay_Mo_So, 
                    double Tong_So_Tien_Goi, 
                    string Ma_Loai_TK, 
                    double So_Du_Hien_Co, 
                    global::System.Nullable<double> Tong_So_Tien_Rut, 
                    global::System.Nullable<global::System.DateTime> Ngay_Dao_Han_Ke_Tiep, 
                    global::System.Nullable<double> Tien_Lai_Phat_Sinh, 
                    string Ngay_Dong_So, 
                    string Original_Ma_TK, 
                    string Original_Ma_KH, 
                    System.DateTime Original_Ngay_Mo_So, 
                    double Original_Tong_So_Tien_Goi, 
                    string Original_Ma_Loai_TK, 
                    double Original_So_Du_Hien_Co, 
                    global::System.Nullable<double> Original_Tong_So_Tien_Rut, 
                    global::System.Nullable<global::System.DateTime> Original_Ngay_Dao_Han_Ke_Tiep, 
                    global::System.Nullable<double> Original_Tien_Lai_Phat_Sinh, 
                    string Original_Ngay_Dong_So) {
            if ((Ma_TK == null)) {
                throw new global::System.ArgumentNullException("Ma_TK");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Ma_TK));
            }
            if ((Ma_KH == null)) {
                throw new global::System.ArgumentNullException("Ma_KH");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Ma_KH));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Ngay_Mo_So));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(Tong_So_Tien_Goi));
            if ((Ma_Loai_TK == null)) {
                throw new global::System.ArgumentNullException("Ma_Loai_TK");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Ma_Loai_TK));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(So_Du_Hien_Co));
            if ((Tong_So_Tien_Rut.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(Tong_So_Tien_Rut.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Ngay_Dao_Han_Ke_Tiep.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Ngay_Dao_Han_Ke_Tiep.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Tien_Lai_Phat_Sinh.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(Tien_Lai_Phat_Sinh.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Ngay_Dong_So == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Ngay_Dong_So));
            }
            if ((Original_Ma_TK == null)) {
                throw new global::System.ArgumentNullException("Original_Ma_TK");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Ma_TK));
            }
            if ((Original_Ma_KH == null)) {
                throw new global::System.ArgumentNullException("Original_Ma_KH");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Ma_KH));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_Ngay_Mo_So));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(Original_Tong_So_Tien_Goi));
            if ((Original_Ma_Loai_TK == null)) {
                throw new global::System.ArgumentNullException("Original_Ma_Loai_TK");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Ma_Loai_TK));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(Original_So_Du_Hien_Co));
            if ((Original_Tong_So_Tien_Rut.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(Original_Tong_So_Tien_Rut.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Ngay_Dao_Han_Ke_Tiep.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_Ngay_Dao_Han_Ke_Tiep.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_Tien_Lai_Phat_Sinh.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(Original_Tien_Lai_Phat_Sinh.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_Ngay_Dong_So == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_Ngay_Dong_So));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Ma_KH, 
                    System.DateTime Ngay_Mo_So, 
                    double Tong_So_Tien_Goi, 
                    string Ma_Loai_TK, 
                    double So_Du_Hien_Co, 
                    global::System.Nullable<double> Tong_So_Tien_Rut, 
                    global::System.Nullable<global::System.DateTime> Ngay_Dao_Han_Ke_Tiep, 
                    global::System.Nullable<double> Tien_Lai_Phat_Sinh, 
                    string Ngay_Dong_So, 
                    string Original_Ma_TK, 
                    string Original_Ma_KH, 
                    System.DateTime Original_Ngay_Mo_So, 
                    double Original_Tong_So_Tien_Goi, 
                    string Original_Ma_Loai_TK, 
                    double Original_So_Du_Hien_Co, 
                    global::System.Nullable<double> Original_Tong_So_Tien_Rut, 
                    global::System.Nullable<global::System.DateTime> Original_Ngay_Dao_Han_Ke_Tiep, 
                    global::System.Nullable<double> Original_Tien_Lai_Phat_Sinh, 
                    string Original_Ngay_Dong_So) {
            return this.Update(Original_Ma_TK, Ma_KH, Ngay_Mo_So, Tong_So_Tien_Goi, Ma_Loai_TK, So_Du_Hien_Co, Tong_So_Tien_Rut, Ngay_Dao_Han_Ke_Tiep, Tien_Lai_Phat_Sinh, Ngay_Dong_So, Original_Ma_TK, Original_Ma_KH, Original_Ngay_Mo_So, Original_Tong_So_Tien_Goi, Original_Ma_Loai_TK, Original_So_Du_Hien_Co, Original_Tong_So_Tien_Rut, Original_Ngay_Dao_Han_Ke_Tiep, Original_Tien_Lai_Phat_Sinh, Original_Ngay_Dong_So);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class KHACH_HANGTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public KHACH_HANGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "KHACH_HANG";
            tableMapping.ColumnMappings.Add("Ma_KH", "Ma_KH");
            tableMapping.ColumnMappings.Add("Ten_Khach_Hang", "Ten_Khach_Hang");
            tableMapping.ColumnMappings.Add("So_CMND", "So_CMND");
            tableMapping.ColumnMappings.Add("So_Dien_Thoai", "So_Dien_Thoai");
            tableMapping.ColumnMappings.Add("Dia_Chi", "Dia_Chi");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[KHACH_HANG] WHERE (([Ma_KH] = @Original_Ma_KH) AND ([Ten_Khach" +
                "_Hang] = @Original_Ten_Khach_Hang) AND ([So_CMND] = @Original_So_CMND) AND ([So_" +
                "Dien_Thoai] = @Original_So_Dien_Thoai) AND ([Dia_Chi] = @Original_Dia_Chi))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ma_KH", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ma_KH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ten_Khach_Hang", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ten_Khach_Hang", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_So_CMND", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "So_CMND", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_So_Dien_Thoai", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "So_Dien_Thoai", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dia_Chi", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dia_Chi", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[KHACH_HANG] ([Ma_KH], [Ten_Khach_Hang], [So_CMND], [So_Dien_Thoai], [Dia_Chi]) VALUES (@Ma_KH, @Ten_Khach_Hang, @So_CMND, @So_Dien_Thoai, @Dia_Chi);
SELECT Ma_KH, Ten_Khach_Hang, So_CMND, So_Dien_Thoai, Dia_Chi FROM KHACH_HANG WHERE (Ma_KH = @Ma_KH)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ma_KH", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ma_KH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ten_Khach_Hang", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ten_Khach_Hang", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@So_CMND", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "So_CMND", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@So_Dien_Thoai", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "So_Dien_Thoai", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dia_Chi", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dia_Chi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[KHACH_HANG] SET [Ma_KH] = @Ma_KH, [Ten_Khach_Hang] = @Ten_Khach_Hang, [So_CMND] = @So_CMND, [So_Dien_Thoai] = @So_Dien_Thoai, [Dia_Chi] = @Dia_Chi WHERE (([Ma_KH] = @Original_Ma_KH) AND ([Ten_Khach_Hang] = @Original_Ten_Khach_Hang) AND ([So_CMND] = @Original_So_CMND) AND ([So_Dien_Thoai] = @Original_So_Dien_Thoai) AND ([Dia_Chi] = @Original_Dia_Chi));
SELECT Ma_KH, Ten_Khach_Hang, So_CMND, So_Dien_Thoai, Dia_Chi FROM KHACH_HANG WHERE (Ma_KH = @Ma_KH)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ma_KH", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ma_KH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ten_Khach_Hang", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ten_Khach_Hang", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@So_CMND", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "So_CMND", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@So_Dien_Thoai", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "So_Dien_Thoai", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dia_Chi", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dia_Chi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ma_KH", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ma_KH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ten_Khach_Hang", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ten_Khach_Hang", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_So_CMND", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "So_CMND", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_So_Dien_Thoai", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "So_Dien_Thoai", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dia_Chi", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dia_Chi", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TIETKIEM.Properties.Settings.Default.QL_TIETKIEMConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Ma_KH, Ten_Khach_Hang, So_CMND, So_Dien_Thoai, Dia_Chi FROM dbo.KHACH_HANG" +
                "";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DS_ChiTiet_SoTK.KHACH_HANGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DS_ChiTiet_SoTK.KHACH_HANGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DS_ChiTiet_SoTK.KHACH_HANGDataTable dataTable = new DS_ChiTiet_SoTK.KHACH_HANGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DS_ChiTiet_SoTK.KHACH_HANGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DS_ChiTiet_SoTK dataSet) {
            return this.Adapter.Update(dataSet, "KHACH_HANG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Ma_KH, string Original_Ten_Khach_Hang, string Original_So_CMND, string Original_So_Dien_Thoai, string Original_Dia_Chi) {
            if ((Original_Ma_KH == null)) {
                throw new global::System.ArgumentNullException("Original_Ma_KH");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Ma_KH));
            }
            if ((Original_Ten_Khach_Hang == null)) {
                throw new global::System.ArgumentNullException("Original_Ten_Khach_Hang");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Ten_Khach_Hang));
            }
            if ((Original_So_CMND == null)) {
                throw new global::System.ArgumentNullException("Original_So_CMND");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_So_CMND));
            }
            if ((Original_So_Dien_Thoai == null)) {
                throw new global::System.ArgumentNullException("Original_So_Dien_Thoai");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_So_Dien_Thoai));
            }
            if ((Original_Dia_Chi == null)) {
                throw new global::System.ArgumentNullException("Original_Dia_Chi");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Dia_Chi));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Ma_KH, string Ten_Khach_Hang, string So_CMND, string So_Dien_Thoai, string Dia_Chi) {
            if ((Ma_KH == null)) {
                throw new global::System.ArgumentNullException("Ma_KH");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Ma_KH));
            }
            if ((Ten_Khach_Hang == null)) {
                throw new global::System.ArgumentNullException("Ten_Khach_Hang");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Ten_Khach_Hang));
            }
            if ((So_CMND == null)) {
                throw new global::System.ArgumentNullException("So_CMND");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(So_CMND));
            }
            if ((So_Dien_Thoai == null)) {
                throw new global::System.ArgumentNullException("So_Dien_Thoai");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(So_Dien_Thoai));
            }
            if ((Dia_Chi == null)) {
                throw new global::System.ArgumentNullException("Dia_Chi");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Dia_Chi));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Ma_KH, string Ten_Khach_Hang, string So_CMND, string So_Dien_Thoai, string Dia_Chi, string Original_Ma_KH, string Original_Ten_Khach_Hang, string Original_So_CMND, string Original_So_Dien_Thoai, string Original_Dia_Chi) {
            if ((Ma_KH == null)) {
                throw new global::System.ArgumentNullException("Ma_KH");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Ma_KH));
            }
            if ((Ten_Khach_Hang == null)) {
                throw new global::System.ArgumentNullException("Ten_Khach_Hang");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Ten_Khach_Hang));
            }
            if ((So_CMND == null)) {
                throw new global::System.ArgumentNullException("So_CMND");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(So_CMND));
            }
            if ((So_Dien_Thoai == null)) {
                throw new global::System.ArgumentNullException("So_Dien_Thoai");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(So_Dien_Thoai));
            }
            if ((Dia_Chi == null)) {
                throw new global::System.ArgumentNullException("Dia_Chi");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Dia_Chi));
            }
            if ((Original_Ma_KH == null)) {
                throw new global::System.ArgumentNullException("Original_Ma_KH");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Ma_KH));
            }
            if ((Original_Ten_Khach_Hang == null)) {
                throw new global::System.ArgumentNullException("Original_Ten_Khach_Hang");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Ten_Khach_Hang));
            }
            if ((Original_So_CMND == null)) {
                throw new global::System.ArgumentNullException("Original_So_CMND");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_So_CMND));
            }
            if ((Original_So_Dien_Thoai == null)) {
                throw new global::System.ArgumentNullException("Original_So_Dien_Thoai");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_So_Dien_Thoai));
            }
            if ((Original_Dia_Chi == null)) {
                throw new global::System.ArgumentNullException("Original_Dia_Chi");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Dia_Chi));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Ten_Khach_Hang, string So_CMND, string So_Dien_Thoai, string Dia_Chi, string Original_Ma_KH, string Original_Ten_Khach_Hang, string Original_So_CMND, string Original_So_Dien_Thoai, string Original_Dia_Chi) {
            return this.Update(Original_Ma_KH, Ten_Khach_Hang, So_CMND, So_Dien_Thoai, Dia_Chi, Original_Ma_KH, Original_Ten_Khach_Hang, Original_So_CMND, Original_So_Dien_Thoai, Original_Dia_Chi);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LOAI_TIET_KIEMTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LOAI_TIET_KIEMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LOAI_TIET_KIEM";
            tableMapping.ColumnMappings.Add("Ma_Loai_TK", "Ma_Loai_TK");
            tableMapping.ColumnMappings.Add("Ten_Loai_TK", "Ten_Loai_TK");
            tableMapping.ColumnMappings.Add("Ky_Han", "Ky_Han");
            tableMapping.ColumnMappings.Add("Lai_Suat", "Lai_Suat");
            tableMapping.ColumnMappings.Add("So_Ngay_Goi_Toi_Thieu", "So_Ngay_Goi_Toi_Thieu");
            tableMapping.ColumnMappings.Add("QD_So_Tien_Duoc_Rut", "QD_So_Tien_Duoc_Rut");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[LOAI_TIET_KIEM] WHERE (([Ma_Loai_TK] = @Original_Ma_Loai_TK) AND ([Ten_Loai_TK] = @Original_Ten_Loai_TK) AND ([Ky_Han] = @Original_Ky_Han) AND ([Lai_Suat] = @Original_Lai_Suat) AND ([So_Ngay_Goi_Toi_Thieu] = @Original_So_Ngay_Goi_Toi_Thieu) AND ([QD_So_Tien_Duoc_Rut] = @Original_QD_So_Tien_Duoc_Rut))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ma_Loai_TK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ma_Loai_TK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ten_Loai_TK", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ten_Loai_TK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ky_Han", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ky_Han", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Lai_Suat", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lai_Suat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_So_Ngay_Goi_Toi_Thieu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "So_Ngay_Goi_Toi_Thieu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QD_So_Tien_Duoc_Rut", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QD_So_Tien_Duoc_Rut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[LOAI_TIET_KIEM] ([Ma_Loai_TK], [Ten_Loai_TK], [Ky_Han], [Lai_Suat], [So_Ngay_Goi_Toi_Thieu], [QD_So_Tien_Duoc_Rut]) VALUES (@Ma_Loai_TK, @Ten_Loai_TK, @Ky_Han, @Lai_Suat, @So_Ngay_Goi_Toi_Thieu, @QD_So_Tien_Duoc_Rut);
SELECT Ma_Loai_TK, Ten_Loai_TK, Ky_Han, Lai_Suat, So_Ngay_Goi_Toi_Thieu, QD_So_Tien_Duoc_Rut FROM LOAI_TIET_KIEM WHERE (Ma_Loai_TK = @Ma_Loai_TK)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ma_Loai_TK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ma_Loai_TK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ten_Loai_TK", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ten_Loai_TK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ky_Han", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ky_Han", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lai_Suat", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lai_Suat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@So_Ngay_Goi_Toi_Thieu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "So_Ngay_Goi_Toi_Thieu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QD_So_Tien_Duoc_Rut", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QD_So_Tien_Duoc_Rut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[LOAI_TIET_KIEM] SET [Ma_Loai_TK] = @Ma_Loai_TK, [Ten_Loai_TK] = @Ten_Loai_TK, [Ky_Han] = @Ky_Han, [Lai_Suat] = @Lai_Suat, [So_Ngay_Goi_Toi_Thieu] = @So_Ngay_Goi_Toi_Thieu, [QD_So_Tien_Duoc_Rut] = @QD_So_Tien_Duoc_Rut WHERE (([Ma_Loai_TK] = @Original_Ma_Loai_TK) AND ([Ten_Loai_TK] = @Original_Ten_Loai_TK) AND ([Ky_Han] = @Original_Ky_Han) AND ([Lai_Suat] = @Original_Lai_Suat) AND ([So_Ngay_Goi_Toi_Thieu] = @Original_So_Ngay_Goi_Toi_Thieu) AND ([QD_So_Tien_Duoc_Rut] = @Original_QD_So_Tien_Duoc_Rut));
SELECT Ma_Loai_TK, Ten_Loai_TK, Ky_Han, Lai_Suat, So_Ngay_Goi_Toi_Thieu, QD_So_Tien_Duoc_Rut FROM LOAI_TIET_KIEM WHERE (Ma_Loai_TK = @Ma_Loai_TK)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ma_Loai_TK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ma_Loai_TK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ten_Loai_TK", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ten_Loai_TK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ky_Han", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ky_Han", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lai_Suat", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lai_Suat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@So_Ngay_Goi_Toi_Thieu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "So_Ngay_Goi_Toi_Thieu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QD_So_Tien_Duoc_Rut", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QD_So_Tien_Duoc_Rut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ma_Loai_TK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ma_Loai_TK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ten_Loai_TK", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ten_Loai_TK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ky_Han", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ky_Han", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Lai_Suat", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lai_Suat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_So_Ngay_Goi_Toi_Thieu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "So_Ngay_Goi_Toi_Thieu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QD_So_Tien_Duoc_Rut", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QD_So_Tien_Duoc_Rut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TIETKIEM.Properties.Settings.Default.QL_TIETKIEMConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Ma_Loai_TK, Ten_Loai_TK, Ky_Han, Lai_Suat, So_Ngay_Goi_Toi_Thieu, QD_So_Ti" +
                "en_Duoc_Rut FROM dbo.LOAI_TIET_KIEM";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DS_ChiTiet_SoTK.LOAI_TIET_KIEMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DS_ChiTiet_SoTK.LOAI_TIET_KIEMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DS_ChiTiet_SoTK.LOAI_TIET_KIEMDataTable dataTable = new DS_ChiTiet_SoTK.LOAI_TIET_KIEMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DS_ChiTiet_SoTK.LOAI_TIET_KIEMDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DS_ChiTiet_SoTK dataSet) {
            return this.Adapter.Update(dataSet, "LOAI_TIET_KIEM");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Ma_Loai_TK, string Original_Ten_Loai_TK, int Original_Ky_Han, double Original_Lai_Suat, int Original_So_Ngay_Goi_Toi_Thieu, string Original_QD_So_Tien_Duoc_Rut) {
            if ((Original_Ma_Loai_TK == null)) {
                throw new global::System.ArgumentNullException("Original_Ma_Loai_TK");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Ma_Loai_TK));
            }
            if ((Original_Ten_Loai_TK == null)) {
                throw new global::System.ArgumentNullException("Original_Ten_Loai_TK");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Ten_Loai_TK));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Ky_Han));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_Lai_Suat));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_So_Ngay_Goi_Toi_Thieu));
            if ((Original_QD_So_Tien_Duoc_Rut == null)) {
                throw new global::System.ArgumentNullException("Original_QD_So_Tien_Duoc_Rut");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_QD_So_Tien_Duoc_Rut));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Ma_Loai_TK, string Ten_Loai_TK, int Ky_Han, double Lai_Suat, int So_Ngay_Goi_Toi_Thieu, string QD_So_Tien_Duoc_Rut) {
            if ((Ma_Loai_TK == null)) {
                throw new global::System.ArgumentNullException("Ma_Loai_TK");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Ma_Loai_TK));
            }
            if ((Ten_Loai_TK == null)) {
                throw new global::System.ArgumentNullException("Ten_Loai_TK");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Ten_Loai_TK));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Ky_Han));
            this.Adapter.InsertCommand.Parameters[3].Value = ((double)(Lai_Suat));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(So_Ngay_Goi_Toi_Thieu));
            if ((QD_So_Tien_Duoc_Rut == null)) {
                throw new global::System.ArgumentNullException("QD_So_Tien_Duoc_Rut");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(QD_So_Tien_Duoc_Rut));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Ma_Loai_TK, string Ten_Loai_TK, int Ky_Han, double Lai_Suat, int So_Ngay_Goi_Toi_Thieu, string QD_So_Tien_Duoc_Rut, string Original_Ma_Loai_TK, string Original_Ten_Loai_TK, int Original_Ky_Han, double Original_Lai_Suat, int Original_So_Ngay_Goi_Toi_Thieu, string Original_QD_So_Tien_Duoc_Rut) {
            if ((Ma_Loai_TK == null)) {
                throw new global::System.ArgumentNullException("Ma_Loai_TK");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Ma_Loai_TK));
            }
            if ((Ten_Loai_TK == null)) {
                throw new global::System.ArgumentNullException("Ten_Loai_TK");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Ten_Loai_TK));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Ky_Han));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(Lai_Suat));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(So_Ngay_Goi_Toi_Thieu));
            if ((QD_So_Tien_Duoc_Rut == null)) {
                throw new global::System.ArgumentNullException("QD_So_Tien_Duoc_Rut");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(QD_So_Tien_Duoc_Rut));
            }
            if ((Original_Ma_Loai_TK == null)) {
                throw new global::System.ArgumentNullException("Original_Ma_Loai_TK");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Ma_Loai_TK));
            }
            if ((Original_Ten_Loai_TK == null)) {
                throw new global::System.ArgumentNullException("Original_Ten_Loai_TK");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Ten_Loai_TK));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Ky_Han));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Original_Lai_Suat));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_So_Ngay_Goi_Toi_Thieu));
            if ((Original_QD_So_Tien_Duoc_Rut == null)) {
                throw new global::System.ArgumentNullException("Original_QD_So_Tien_Duoc_Rut");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_QD_So_Tien_Duoc_Rut));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Ten_Loai_TK, int Ky_Han, double Lai_Suat, int So_Ngay_Goi_Toi_Thieu, string QD_So_Tien_Duoc_Rut, string Original_Ma_Loai_TK, string Original_Ten_Loai_TK, int Original_Ky_Han, double Original_Lai_Suat, int Original_So_Ngay_Goi_Toi_Thieu, string Original_QD_So_Tien_Duoc_Rut) {
            return this.Update(Original_Ma_Loai_TK, Ten_Loai_TK, Ky_Han, Lai_Suat, So_Ngay_Goi_Toi_Thieu, QD_So_Tien_Duoc_Rut, Original_Ma_Loai_TK, Original_Ten_Loai_TK, Original_Ky_Han, Original_Lai_Suat, Original_So_Ngay_Goi_Toi_Thieu, Original_QD_So_Tien_Duoc_Rut);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private SO_TIET_KIEMTableAdapter _sO_TIET_KIEMTableAdapter;
        
        private KHACH_HANGTableAdapter _kHACH_HANGTableAdapter;
        
        private LOAI_TIET_KIEMTableAdapter _lOAI_TIET_KIEMTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public SO_TIET_KIEMTableAdapter SO_TIET_KIEMTableAdapter {
            get {
                return this._sO_TIET_KIEMTableAdapter;
            }
            set {
                this._sO_TIET_KIEMTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public KHACH_HANGTableAdapter KHACH_HANGTableAdapter {
            get {
                return this._kHACH_HANGTableAdapter;
            }
            set {
                this._kHACH_HANGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public LOAI_TIET_KIEMTableAdapter LOAI_TIET_KIEMTableAdapter {
            get {
                return this._lOAI_TIET_KIEMTableAdapter;
            }
            set {
                this._lOAI_TIET_KIEMTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._sO_TIET_KIEMTableAdapter != null) 
                            && (this._sO_TIET_KIEMTableAdapter.Connection != null))) {
                    return this._sO_TIET_KIEMTableAdapter.Connection;
                }
                if (((this._kHACH_HANGTableAdapter != null) 
                            && (this._kHACH_HANGTableAdapter.Connection != null))) {
                    return this._kHACH_HANGTableAdapter.Connection;
                }
                if (((this._lOAI_TIET_KIEMTableAdapter != null) 
                            && (this._lOAI_TIET_KIEMTableAdapter.Connection != null))) {
                    return this._lOAI_TIET_KIEMTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._sO_TIET_KIEMTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._kHACH_HANGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._lOAI_TIET_KIEMTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(DS_ChiTiet_SoTK dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._lOAI_TIET_KIEMTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.LOAI_TIET_KIEM.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._lOAI_TIET_KIEMTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._kHACH_HANGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.KHACH_HANG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._kHACH_HANGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sO_TIET_KIEMTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SO_TIET_KIEM.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sO_TIET_KIEMTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(DS_ChiTiet_SoTK dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._lOAI_TIET_KIEMTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.LOAI_TIET_KIEM.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._lOAI_TIET_KIEMTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._kHACH_HANGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.KHACH_HANG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._kHACH_HANGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sO_TIET_KIEMTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SO_TIET_KIEM.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sO_TIET_KIEMTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(DS_ChiTiet_SoTK dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._sO_TIET_KIEMTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SO_TIET_KIEM.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sO_TIET_KIEMTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._kHACH_HANGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.KHACH_HANG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._kHACH_HANGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._lOAI_TIET_KIEMTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.LOAI_TIET_KIEM.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._lOAI_TIET_KIEMTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(DS_ChiTiet_SoTK dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._sO_TIET_KIEMTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sO_TIET_KIEMTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._kHACH_HANGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._kHACH_HANGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._lOAI_TIET_KIEMTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._lOAI_TIET_KIEMTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._sO_TIET_KIEMTableAdapter != null)) {
                    revertConnections.Add(this._sO_TIET_KIEMTableAdapter, this._sO_TIET_KIEMTableAdapter.Connection);
                    this._sO_TIET_KIEMTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sO_TIET_KIEMTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sO_TIET_KIEMTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sO_TIET_KIEMTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sO_TIET_KIEMTableAdapter.Adapter);
                    }
                }
                if ((this._kHACH_HANGTableAdapter != null)) {
                    revertConnections.Add(this._kHACH_HANGTableAdapter, this._kHACH_HANGTableAdapter.Connection);
                    this._kHACH_HANGTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._kHACH_HANGTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._kHACH_HANGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._kHACH_HANGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._kHACH_HANGTableAdapter.Adapter);
                    }
                }
                if ((this._lOAI_TIET_KIEMTableAdapter != null)) {
                    revertConnections.Add(this._lOAI_TIET_KIEMTableAdapter, this._lOAI_TIET_KIEMTableAdapter.Connection);
                    this._lOAI_TIET_KIEMTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._lOAI_TIET_KIEMTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._lOAI_TIET_KIEMTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._lOAI_TIET_KIEMTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._lOAI_TIET_KIEMTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._sO_TIET_KIEMTableAdapter != null)) {
                    this._sO_TIET_KIEMTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sO_TIET_KIEMTableAdapter]));
                    this._sO_TIET_KIEMTableAdapter.Transaction = null;
                }
                if ((this._kHACH_HANGTableAdapter != null)) {
                    this._kHACH_HANGTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._kHACH_HANGTableAdapter]));
                    this._kHACH_HANGTableAdapter.Transaction = null;
                }
                if ((this._lOAI_TIET_KIEMTableAdapter != null)) {
                    this._lOAI_TIET_KIEMTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._lOAI_TIET_KIEMTableAdapter]));
                    this._lOAI_TIET_KIEMTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591